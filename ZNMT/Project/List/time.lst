C51 COMPILER V9.50a   TIME                                                                 09/25/2013 16:43:52 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE TIME
OBJECT MODULE PLACED IN .\Obj\time.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE ..\Bsp\time.c LARGE OPTIMIZE(SIZE) BROWSE MODP2 INCDIR(..\App
                    -;..\Bsp) DEBUG OBJECTEXTEND PRINT(.\List\time.lst) OBJECT(.\Obj\time.obj)

line level    source

   1          /*
   2          *  定时器T0程序
   3          *  用于程序定时
   4          */
   5          #include <stc12c5a60s2.h>
   6          #include <intrins.h>
   7          #include "time.h"
   8          
   9          #include "app.h"
  10          #include "usart.h"
  11          #include "bsp_key.h"
  12          #include "bsp_buz.h"
  13          
  14          //宏定义
  15          #define TIM_NUM  4 //软定时器个数
  16          
  17          //全局变量定义
  18          TIM softTim[TIM_NUM]; //使用TIM0， 软件定时器
  19          
  20          //函数申明
  21          static void bsp_timDec(TIM *tim);
  22          
  23          /*********************************************************************************************
  24          函数名：T0_init
  25          作  用：初始化定时器，开中断
  26          参  数：无
  27          返回值：无
  28          结  果：设置SFR中T/C1和（或）T/C0相关参数
  29          备  注：本函数控制T/C1和T/C0，不需要使用的部分可用//屏蔽
  30          **********************************************************************************************/
  31          void Tim_init (void)
  32          {
  33   1              TMOD = 0x11; //高4位控制T/C1 [ GATE，C/T，M1，M0，GATE，C/T，M1，M0 ]
  34   1      
  35   1              TH1 = 0xFF; //16位计数寄存器T1高8位（写入初值）
  36   1              TL1 = 0xFF; //16位计数寄存器T1低8位
  37   1              ET1 = 1; //T/C1中断开关
  38   1              //TR1 = 1; //T/C1启动开关
  39   1      
  40   1              TH0 = 0x3C; //16位计数寄存器T0高8位
  41   1              TL0 = 0xB0; //16位计数寄存器T0低8位（0x3CB0 = 50mS延时）
  42   1              ET0 = 1; //T/C0中断开关
  43   1              //TR0 = 1; //T/C0启动开关
  44   1      }
  45          
  46          
  47          /*********************************************************************************************
  48          函数名：bsp_startTim
  49          作  用：启动一个定时
  50          参  数：id 软件定时器  period  定时时间
  51          返回值：无
  52          结  果：
  53          备  注：
  54          **********************************************************************************************/
C51 COMPILER V9.50a   TIME                                                                 09/25/2013 16:43:52 PAGE 2   

  55          void bsp_startTim(unsigned char id, unsigned int period)
  56          {
  57   1              //定时器有效性判断
  58   1              if(id >= TIM_NUM)
  59   1              {
  60   2                      UART_Send_String("tim id error!");
  61   2                      
  62   2                      return;
  63   2              }
  64   1              
  65   1              EA = 0; //关中断
  66   1      
  67   1              softTim[id].mode = MANUAL_TIM;
  68   1              softTim[id].flag = 0;
  69   1              softTim[id].countValue = period;
  70   1              softTim[id].reloadValue = 0;
  71   1              
  72   1              EA = 1; //开中断
  73   1      }
  74          
  75          /*********************************************************************************************
  76          函数名：bsp_startAutoTim
  77          作  用：启动一个定时
  78          参  数：id 软件定时器  period  定时时间
  79          返回值：无
  80          结  果：
  81          备  注：
  82          **********************************************************************************************/
  83          void bsp_startAutoTim(unsigned char id, unsigned int period)
  84          {
  85   1              //定时器有效性判断
  86   1              if(id >= TIM_NUM)
  87   1              {
  88   2                      UART_Send_String("tim id error!");
  89   2                      
  90   2                      return;
  91   2              }
  92   1              
  93   1              EA = 0; //关中断
  94   1      
  95   1              softTim[id].mode = AUTO_TIM;
  96   1              softTim[id].flag = 0;
  97   1              softTim[id].countValue = period;
  98   1              softTim[id].reloadValue = period;
  99   1              
 100   1              EA = 1; //开中断
 101   1      }
 102          
 103          
 104          
 105          /*********************************************************************************************
 106          函数名：bsp_stopTim
 107          作  用：停止一个定时
 108          参  数：id 软件定时器
 109          返回值：无
 110          结  果：
 111          备  注：
 112          **********************************************************************************************/
 113          void bsp_stopTim(unsigned char id)
 114          {
 115   1              //定时器有效性判断
 116   1              if(id >= TIM_NUM)
C51 COMPILER V9.50a   TIME                                                                 09/25/2013 16:43:52 PAGE 3   

 117   1              {
 118   2                      UART_Send_String("tim id error!");
 119   2                      
 120   2                      return;
 121   2              }
 122   1              
 123   1              EA = 0; //关中断
 124   1      
 125   1              softTim[id].mode = MANUAL_TIM;
 126   1              softTim[id].flag = 0;
 127   1              softTim[id].countValue = 0;
 128   1              softTim[id].reloadValue = 0;
 129   1              
 130   1              EA = 1; //开中断
 131   1      }
 132          
 133          /*********************************************************************************************
 134          函数名：bsp_checkTim
 135          作  用：查询一个定时
 136          参  数：id 软件定时器
 137          返回值：0 - 定时间未到  1 - 定时时间到
 138          结  果：
 139          备  注：
 140          **********************************************************************************************/
 141          unsigned char bsp_checkTim(const unsigned char id)
 142          {
 143   1              //定时器有效性判断
 144   1              if(id >= TIM_NUM)
 145   1              {
 146   2                      UART_Send_String("tim id error!");
 147   2                      return 0;
 148   2              }
 149   1      
 150   1              if(softTim[id].flag == 1)
 151   1              {
 152   2                      softTim[id].flag = 0;
 153   2                      
 154   2                      return 1;
 155   2              }
 156   1              else
 157   1              {
 158   2                      return 0;
 159   2              }
 160   1              
 161   1      }
 162          
 163          /*********************************************************************************************
 164          函数名：bsp_timDec
 165          作  用：启动一个定时
 166          参  数：tim 指针
 167          返回值：无
 168          结  果：
 169          备  注：
 170          **********************************************************************************************/
 171          static void bsp_timDec(TIM *tim)
 172          {
 173   1              if(tim->countValue > 0)
 174   1              {
 175   2                      /* 如果定时器变量减到1则设置定时器到达标志 */
 176   2                      if (--tim->countValue == 0)
 177   2                      {
 178   3                              tim->flag = 1;
C51 COMPILER V9.50a   TIME                                                                 09/25/2013 16:43:52 PAGE 4   

 179   3      
 180   3                              /* 如果是自动模式，则自动重装计数器 */
 181   3                              if(tim->mode == AUTO_TIM)
 182   3                              {
 183   4                                      tim->countValue = tim->reloadValue;
 184   4                              }
 185   3                      }
 186   2              }
 187   1      }
 188          
 189          /*********************************************************************************************
 190          函数名：定时/计数器0中断处理函数
 191          调  用：[T/C0溢出后中断处理]
 192          参  数：无
 193          返回值：无
 194          结  果：重新写入16位计数寄存器初始值，处理用户程序
 195          备  注：必须允许中断并启动T/C本函数方可有效，重新写入初值需和T_C_init函数一致
 196          **********************************************************************************************/
 197          void T_C0 (void) interrupt 1 
 198          {
 199   1              static unsigned int  timCounter = 0, tim2= 0;
 200   1              unsigned char i;
 201   1              
 202   1              //切换寄存器组到1
 203   1              TH0 = 0xfc; //16位计数寄存器T0高8位（重新写入初值） fc
 204   1              TL0 = 0x17; //16位计数寄存器T0低8位（0x3CB0 = 50mS延时） 17
 205   1              
 206   1              //软件定时器时间更新
 207   1              for(i = 0; i < TIM_NUM; i++)
 208   1              {
 209   2                      bsp_timDec(&softTim[i]);
 210   2              }
 211   1      
 212   1              //人体检测
 213   1              HumDetect();
 214   1              
 215   1              //定时15ms, 用于按键扫描
 216   1              if(++timCounter > 15)
 217   1              {
 218   2                      timCounter = 0;
 219   2      
 220   2                      keyProess();
 221   2                      getKey();
 222   2              }
 223   1      
 224   1              //LED指示灯显示
 225   1              if(tim2++ > 1)
 226   1              {
 227   2                      tim2 = 0;
 228   2                      led_d();
 229   2              }
 230   1      
 231   1      }
 232                  
 233          
 234          /*********************************************************************************************
 235          函数名：定时/计数器1中断处理函数
 236          参  数：无
 237          返回值：无
 238          结  果：重新写入16位计数寄存器初始值，处理用户程序
 239          备  注：必须允许中断并启动T/C本函数方可有效，重新写入初值需和T_C_init函数一致
 240          **********************************************************************************************/
C51 COMPILER V9.50a   TIME                                                                 09/25/2013 16:43:52 PAGE 5   

 241          void T_C1(void) interrupt 3 
 242          {
 243   1              BuzProsse();
 244   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    736    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =     28       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
